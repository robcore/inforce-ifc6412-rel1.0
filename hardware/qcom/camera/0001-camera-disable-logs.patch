From 6778e73cd638a277b832432735f9fb53304dcd1b Mon Sep 17 00:00:00 2001
From: Suman Kumar <suman@inforcecomputing.com>
Date: Mon, 24 Mar 2014 15:07:57 +0530
Subject: [PATCH] camera: disable logs

Change-Id: I40383cbaf863903dfe8e09270faf3bea68d0879a
---
 QCamera/HAL/core/src/QCameraHWI_Record.cpp |    2 ++
 QCameraHWI_Record.cpp                      |    3 ++-
 mm-camera-interface/mm_camera_notify.c     |    8 ++++----
 3 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/QCamera/HAL/core/src/QCameraHWI_Record.cpp b/QCamera/HAL/core/src/QCameraHWI_Record.cpp
index 684e94f..ecdbab4 100644
--- a/QCamera/HAL/core/src/QCameraHWI_Record.cpp
+++ b/QCamera/HAL/core/src/QCameraHWI_Record.cpp
@@ -154,6 +154,8 @@ status_t QCameraStream_record::processRecordFrame(mm_camera_super_buf_t *frame)
     mLastFrameTimestampUs = timeStamp;
 
   ALOGV("<DEBUG4>:Send Video frame to services/encoder TimeStamp : %lld",timeStamp);
+  /* ALOGE("Send Video frame to services/encoder TimeStamp :
+   * %lld",timeStamp);*/
   mRecordedFrames[video_buf_idx] = *frame;
   mHalCamCtrl->cache_ops(&mHalCamCtrl->mRecordingMemory.mem_info[video_buf_idx],
                            (void *)mHalCamCtrl->mRecordingMemory.camera_memory[video_buf_idx]->data,
diff --git a/QCameraHWI_Record.cpp b/QCameraHWI_Record.cpp
index e41412f..c5fad4e 100755
--- a/QCameraHWI_Record.cpp
+++ b/QCameraHWI_Record.cpp
@@ -340,7 +340,8 @@ status_t QCameraStream_record::processRecordFrame(void *data)
 	nsecs_t timeStamp = nsecs_t(frame->video.video.frame->ts.tv_sec)*1000000000LL + \
                       frame->video.video.frame->ts.tv_nsec;
 
-  ALOGE("Send Video frame to services/encoder TimeStamp : %lld",timeStamp);
+  /* ALOGE("Send Video frame to services/encoder TimeStamp : %lld",timeStamp);
+   * */
   mRecordedFrames[frame->video.video.idx] = *frame;
 
 #ifdef USE_ION
diff --git a/mm-camera-interface/mm_camera_notify.c b/mm-camera-interface/mm_camera_notify.c
index 0af41db..87140c3 100644
--- a/mm-camera-interface/mm_camera_notify.c
+++ b/mm-camera-interface/mm_camera_notify.c
@@ -683,7 +683,7 @@ static void mm_camera_read_video_frame(mm_camera_obj_t * my_obj)
     idx =  mm_camera_read_msm_frame(my_obj,stream);
     if (idx < 0)
         return;
-    ALOGE("Video thread locked");
+    /* ALOGE("Video thread locked"); */
     memset(buf_cb,0,sizeof(mm_camera_buf_cb_t) * MM_CAMERA_BUF_CB_MAX);
     pthread_mutex_lock(&my_obj->ch[MM_CAMERA_CH_VIDEO].mutex);
     for( i=0;i<MM_CAMERA_BUF_CB_MAX;i++) {
@@ -696,12 +696,12 @@ static void mm_camera_read_video_frame(mm_camera_obj_t * my_obj)
             data[i].video.video.frame = &my_obj->ch[MM_CAMERA_CH_VIDEO].video.video.
                 frame.frame[idx].frame;
             my_obj->ch[MM_CAMERA_CH_VIDEO].video.video.frame.ref_count[idx]++;
-            ALOGE("Video thread callback issued");
+            /* ALOGE("Video thread callback issued"); */
             //my_obj->ch[MM_CAMERA_CH_VIDEO].buf_cb[i].cb(&data,
             //                        my_obj->ch[MM_CAMERA_CH_VIDEO].buf_cb[i].user_data);
             memcpy(&buf_cb[i], &my_obj->ch[MM_CAMERA_CH_VIDEO].buf_cb[i],
                    sizeof(mm_camera_buf_cb_t));
-            ALOGE("Video thread callback returned");
+            /* ALOGE("Video thread callback returned"); */
             if( my_obj->ch[MM_CAMERA_CH_VIDEO].buf_cb[i].cb_type==MM_CAMERA_BUF_CB_COUNT ) {
                 ALOGE("<DEBUG>:%s: Additional cb called for buffer %p:%d",__func__,stream,idx);
                 if(--(my_obj->ch[MM_CAMERA_CH_VIDEO].buf_cb[i].cb_count) == 0 )
@@ -722,7 +722,7 @@ static void mm_camera_read_video_frame(mm_camera_obj_t * my_obj)
         }*/
     }
 
-    ALOGE("Video thread unlocked");
+    /* ALOGE("Video thread unlocked"); */
 }
 
 static void mm_camera_read_video_main_frame(mm_camera_obj_t * my_obj)
-- 
1.7.9.5

